#!/usr/bin/python3
import os, sys, shutil
from pathlib import Path

flatpak = os.path.exists("/.flatpak-info")
snap = os.environ.get('SNAP_NAME', '') == 'savedesktop'

# Cache directory
cache_path = f"{Path.home()}/.var/app/io.github.vikdevelop.SaveDesktop/cache/tmp" if flatpak else f"{os.getenv('SNAP_USER_COMMON')}/.cache/tmp" if snap else f"{Path.home()}/.cache/io.github.vikdevelop.SaveDesktop"

# Init dir for loading the Python scripts
init_dir = "/app" if flatpak else f"{os.getenv('SNAP')}/usr" if snap else f"{Path.home()}/.local/share/savedesktop/src"
sys.path.append(init_dir)

# Command-line arguments
args = sys.argv[1:]  # Get command-line arguments excluding the script name

# Run Python scripts based on command-line arguments
if "--background" in args:
    from periodic_saving import PeriodicBackups
    pb = PeriodicBackups()
    pb.run(None)
    exit()
elif "--sync" in args:
    from network_sharing import Syncing
    exit()
elif "--save-now" in args:
    from periodic_saving import PeriodicBackups
    pb = PeriodicBackups()
    pb.run(now=True)
    exit()
elif "--import-config" in args:
    import_config_index = args.index("--import-config") + 1
    if import_config_index < len(args):
        file_path = args[import_config_index]
        if not os.path.exists(file_path):
            print(f"File not found: {file_path}")
            exit(1)
        
        shutil.rmtree(os.path.join(cache_path, "import_config"), ignore_errors=True)
        os.makedirs(os.path.join(cache_path, "import_config"), exist_ok=True)
        os.chdir(os.path.join(cache_path, "import_config"))
        
        if file_path.endswith('.sd.zip'):
            os.system(f"unzip {file_path}")
        elif file_path.endswith('.sd.tar.gz'):
            os.system(f"tar -xf {file_path}")
        else:
            print("Unsupported file type. Use *.sd.tar.gz or *.sd.zip.")
            exit(1)
        
        os.system(f"python3 {init_dir}/config.py --import_")
        exit()

# Default action if no arguments match
import main_window
